{"ast":null,"code":"import React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main3 = () => {\n  // 1 Sort arr, tìm min max\n  const ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]; // console.log(ages.sort());\n\n  const minAge = ages[0];\n  const maxAge = ages[ages.length - 1]; // Tìm độ tuổi trung bình (Median arr)\n  // console.log(ages[ages.length/2])\n  //Tìm độ tuổi trung bình (Average arr)\n\n  const ageAverage = ages.reduce((sum, age) => sum + age, 0) / ages.length; // console.log(Math.floor(ageAverage))\n  //   Tìm Range Ages\n\n  const rangeAge = maxAge - minAge; // console.log(rangeAge);\n  // So sánh giá trị (min - average) vs (max - average) use abs();\n  // let minAverage:number = Math.abs(minAge - rangeAge);\n  // let maxAverage:number = Math.abs(maxAge - rangeAge);\n  // console.log(minAverage);\n  // console.log(maxAverage);\n  // if(minAverage < maxAverage) {\n  //   console.log('minAverage < maxAverage');\n  // } else {\n  //   console.log('minAverage > maxAverage');\n  // }\n  // Cắt 10 quốc gia đầu tiên\n\n  const countries = [\"Albania\", \"Bolivia\", \"Canada\", \"Denmark\", \"Ethiopia\", \"Finland\", \"Germany\", \"Hungary\", \"Ireland\", \"Japan\", \"Kenya\" // 'Vietnam'\n  ];\n  const newCountries = countries.slice(0, 10); // Tìm các quốc gia ở middle\n  // const midCountries:number = countries.length/2\n  // console.log(countries[Math.floor(midCountries)]);\n  // Thêm 1 quốc gia để thành số chẵn\n  // countries.unshift('Vietnam')\n  // let totalArr = countries[countries.length/2]\n  // console.log(countries);\n  // let arr1 = countries.slice(0, 5)\n  // arr1.unshift('Vietnam')\n  // console.log(arr1);\n  // let arr2 = countries.slice(5, 11)\n  // console.log(arr2);\n  // Tách mảng nếu mảng lẻ thêm việt nam vào đầu mảng lẻ\n\n  let coun1 = [];\n  let coun2 = [];\n  let indexMiddleFloor = Math.floor(countries.length / 2);\n  let indexMiddle = Math.ceil(countries.length / 2); // console.log(indexMiddle);\n  // console.log(indexMiddleFloor);\n  // coun1 = countries.slice(0, indexMiddleFloor);\n  // coun2 = countries.slice(indexMiddleFloor, countries.length);\n  // console.log(coun1);\n  // console.log(coun2);\n  // if (countries.length % 2 !== 0) {\n  //   coun1.unshift(\"Vietnam\")\n  // } else {\n  //   console.log(coun1);\n  //   console.log(coun2);\n  // }\n  // Tạo prompt >= 18 và ngược lại\n  // let valueInput: number = Number(prompt(\"Enter your age:\"));\n  // if (valueInput >= 18) {\n  //   console.log(\"You are old enough to drive\");\n  // } else {\n  //   let result = 18 - valueInput;\n  //   console.log(`You are left with ${result} years to drive.`);\n  // }\n  // Tìm theo điểm\n  // let valueScore: number = Number(prompt(\"Nhập Score: \"));\n  // switch (true) {\n  //   case valueScore < 50:\n  //     console.log(\"Bạn được hạng F\");\n  //     break;\n  //   case valueScore >= 50 && valueScore <= 59:\n  //     console.log(\"Bạn được hạng D\");\n  //     break;\n  //   case valueScore >= 60 && valueScore <= 69:\n  //     console.log(\"Bạn được hạng C\");\n  //     break;\n  //   case valueScore >= 70 && valueScore <= 79:\n  //     console.log(\"Bạn được hạng B\");\n  //     break;\n  //   case valueScore >= 80 && valueScore <= 100:\n  //     console.log(\"Bạn được hạng A\");\n  //     break;\n  //   default:\n  //     console.log('Bạn đã nhập sai score vui lòng nhập lại')\n  // }\n  // Nếu chữ thường hoặc chữ hoa sẽ in ra giá trị và khác sẽ trả về cc\n  // let valueInput: string | null = prompt(\"What is the day today\");\n  // let saturday: string = \"Saturday\";\n  // let friday: string = \"Friday\";\n  // if (\n  //   valueInput?.toLocaleLowerCase() === saturday.toLocaleLowerCase() ||\n  //   valueInput?.toLocaleUpperCase() === saturday.toLocaleUpperCase()\n  // ) {\n  //   alert(\"Saturday is a weekend\");\n  // } else if (\n  //   valueInput?.toLocaleLowerCase() === friday.toLocaleLowerCase() ||\n  //   valueInput?.toLocaleUpperCase() === friday.toLocaleUpperCase()\n  // ) {\n  //   alert(\"Friday is a working day\");\n  // } else {\n  //   alert(\"cc\");\n  // }\n\n  let valueInput = prompt('Enter a Month');\n\n  const valueYearMonth = (year, month) => new Date(year, month, 0).getDate();\n\n  let July = valueYearMonth(2022, 7);\n  let January = valueYearMonth(2022, 6);\n  let JulyMonth = 'July';\n  let JulynuaryMonth = 'January';\n\n  if ((valueInput === null || valueInput === void 0 ? void 0 : valueInput.toLocaleLowerCase()) === JulyMonth.toLocaleLowerCase() || (valueInput === null || valueInput === void 0 ? void 0 : valueInput.toLocaleUpperCase()) === JulyMonth.toLocaleUpperCase()) {\n    alert(July);\n  } else if ((valueInput === null || valueInput === void 0 ? void 0 : valueInput.toLocaleLowerCase()) === January.toLocaleLowerCase() || valueInput !== null && valueInput !== void 0 && valueInput.toLocaleLowerCase) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Main3;\nexport default Main3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main3\");","map":{"version":3,"names":["React","Main3","ages","minAge","maxAge","length","ageAverage","reduce","sum","age","rangeAge","countries","newCountries","slice","coun1","coun2","indexMiddleFloor","Math","floor","indexMiddle","ceil","valueInput","prompt","valueYearMonth","year","month","Date","getDate","July","January","JulyMonth","JulynuaryMonth","toLocaleLowerCase","toLocaleUpperCase","alert"],"sources":["/Users/thanhmaster/Applications/disk D/skill-copy/skillJS/src/level 3/index.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Main3 = () => {\n  // 1 Sort arr, tìm min max\n  const ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24];\n  // console.log(ages.sort());\n  const minAge: number = ages[0];\n  const maxAge: number = ages[ages.length - 1];\n\n  // Tìm độ tuổi trung bình (Median arr)\n  // console.log(ages[ages.length/2])\n\n  //Tìm độ tuổi trung bình (Average arr)\n  const ageAverage: number =\n    ages.reduce((sum, age) => sum + age, 0) / ages.length;\n  // console.log(Math.floor(ageAverage))\n\n  //   Tìm Range Ages\n  const rangeAge: number = maxAge - minAge;\n  // console.log(rangeAge);\n\n  // So sánh giá trị (min - average) vs (max - average) use abs();\n  // let minAverage:number = Math.abs(minAge - rangeAge);\n  // let maxAverage:number = Math.abs(maxAge - rangeAge);\n  // console.log(minAverage);\n  // console.log(maxAverage);\n\n  // if(minAverage < maxAverage) {\n  //   console.log('minAverage < maxAverage');\n  // } else {\n  //   console.log('minAverage > maxAverage');\n  // }\n\n  // Cắt 10 quốc gia đầu tiên\n  const countries = [\n    \"Albania\",\n    \"Bolivia\",\n    \"Canada\",\n    \"Denmark\",\n    \"Ethiopia\",\n    \"Finland\",\n    \"Germany\",\n    \"Hungary\",\n    \"Ireland\",\n    \"Japan\",\n    \"Kenya\",\n    // 'Vietnam'\n  ];\n\n  const newCountries: String[] = countries.slice(0, 10);\n\n  // Tìm các quốc gia ở middle\n\n  // const midCountries:number = countries.length/2\n  // console.log(countries[Math.floor(midCountries)]);\n\n  // Thêm 1 quốc gia để thành số chẵn\n  // countries.unshift('Vietnam')\n\n  // let totalArr = countries[countries.length/2]\n  // console.log(countries);\n\n  // let arr1 = countries.slice(0, 5)\n  // arr1.unshift('Vietnam')\n  // console.log(arr1);\n\n  // let arr2 = countries.slice(5, 11)\n  // console.log(arr2);\n\n  // Tách mảng nếu mảng lẻ thêm việt nam vào đầu mảng lẻ\n\n  let coun1: string[] = [];\n  let coun2: string[] = [];\n  let indexMiddleFloor = Math.floor(countries.length / 2);\n  let indexMiddle = Math.ceil(countries.length / 2);\n\n  // console.log(indexMiddle);\n  // console.log(indexMiddleFloor);\n\n  // coun1 = countries.slice(0, indexMiddleFloor);\n  // coun2 = countries.slice(indexMiddleFloor, countries.length);\n  // console.log(coun1);\n  // console.log(coun2);\n\n  // if (countries.length % 2 !== 0) {\n  //   coun1.unshift(\"Vietnam\")\n  // } else {\n  //   console.log(coun1);\n  //   console.log(coun2);\n  // }\n\n  // Tạo prompt >= 18 và ngược lại\n  // let valueInput: number = Number(prompt(\"Enter your age:\"));\n\n  // if (valueInput >= 18) {\n  //   console.log(\"You are old enough to drive\");\n  // } else {\n  //   let result = 18 - valueInput;\n  //   console.log(`You are left with ${result} years to drive.`);\n  // }\n\n  // Tìm theo điểm\n  // let valueScore: number = Number(prompt(\"Nhập Score: \"));\n\n  // switch (true) {\n  //   case valueScore < 50:\n  //     console.log(\"Bạn được hạng F\");\n  //     break;\n  //   case valueScore >= 50 && valueScore <= 59:\n  //     console.log(\"Bạn được hạng D\");\n  //     break;\n  //   case valueScore >= 60 && valueScore <= 69:\n  //     console.log(\"Bạn được hạng C\");\n  //     break;\n  //   case valueScore >= 70 && valueScore <= 79:\n  //     console.log(\"Bạn được hạng B\");\n  //     break;\n  //   case valueScore >= 80 && valueScore <= 100:\n  //     console.log(\"Bạn được hạng A\");\n  //     break;\n  //   default:\n  //     console.log('Bạn đã nhập sai score vui lòng nhập lại')\n  // }\n  \n\n\n  // Nếu chữ thường hoặc chữ hoa sẽ in ra giá trị và khác sẽ trả về cc\n  // let valueInput: string | null = prompt(\"What is the day today\");\n  // let saturday: string = \"Saturday\";\n  // let friday: string = \"Friday\";\n\n  // if (\n  //   valueInput?.toLocaleLowerCase() === saturday.toLocaleLowerCase() ||\n  //   valueInput?.toLocaleUpperCase() === saturday.toLocaleUpperCase()\n  // ) {\n  //   alert(\"Saturday is a weekend\");\n  // } else if (\n  //   valueInput?.toLocaleLowerCase() === friday.toLocaleLowerCase() ||\n  //   valueInput?.toLocaleUpperCase() === friday.toLocaleUpperCase()\n  // ) {\n  //   alert(\"Friday is a working day\");\n  // } else {\n  //   alert(\"cc\");\n  // }\n\n\n  let valueInput = prompt('Enter a Month')\n  const valueYearMonth = (year:number, month:number) => ( \n     new Date(year, month, 0).getDate()\n  )\n\n  let July = valueYearMonth(2022, 7)\n\n  let January = valueYearMonth(2022, 6)\n  \n  let JulyMonth = 'July'\n  let JulynuaryMonth = 'January'\n\n  if(valueInput?.toLocaleLowerCase() === JulyMonth.toLocaleLowerCase() || valueInput?.toLocaleUpperCase() === JulyMonth.toLocaleUpperCase()) {\n     alert(July)\n  } else if (valueInput?.toLocaleLowerCase() === January.toLocaleLowerCase() || valueInput?.toLocaleLowerCase) {\n\n  }\n  return <></>;\n};\n\nexport default Main3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}